// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurismoGlobalArandas.Context;

#nullable disable

namespace TurismoGlobalArandas.Migrations
{
    [DbContext(typeof(TurismoGlobalContext))]
    [Migration("20240201061138_range_agency_groupRate")]
    partial class range_agency_groupRate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TurismoGlobalArandas.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.AditionalServices", b =>
                {
                    b.Property<int>("AditionalServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AditionalServiceId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AditionalServiceId");

                    b.ToTable("AditionalServices");

                    b.HasData(
                        new
                        {
                            AditionalServiceId = 1,
                            IsDeleted = false,
                            Name = "Servicio de reservación de vuelo"
                        },
                        new
                        {
                            AditionalServiceId = 2,
                            IsDeleted = false,
                            Name = "Servicio de reservación de vehiculo"
                        });
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirlineId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Customers", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Destinations", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WorkStation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            IsDeleted = false,
                            Lastname = "López Ortega",
                            Name = "Miguel",
                            PhoneNumber = "3911001273",
                            Salary = 0m,
                            WorkStation = "Developer"
                        });
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ExpensesEventual", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseId");

                    b.ToTable("ExpensesEventuals");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ExpensesFixed", b =>
                {
                    b.Property<int>("ExpensesFixedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpensesFixedId"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpensesFixedId");

                    b.ToTable("ExpensesFixeds");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Files", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<string>("GuidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.HasIndex("PaymentProviderId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.GroupRate", b =>
                {
                    b.Property<int>("GroupRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupRateId"));

                    b.Property<int?>("Adults")
                        .HasColumnType("int");

                    b.Property<string>("AgesMinors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Juniors")
                        .HasColumnType("int");

                    b.Property<int?>("MinorsCharge")
                        .HasColumnType("int");

                    b.Property<int?>("MinorsWithoutCharge")
                        .HasColumnType("int");

                    b.Property<string>("NamesCompanions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RangeAgency")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RangeNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RangeTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ReservationHotelGroupId")
                        .HasColumnType("int");

                    b.HasKey("GroupRateId");

                    b.HasIndex("ReservationHotelGroupId");

                    b.ToTable("GroupRates");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Habitations", b =>
                {
                    b.Property<int>("HabitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabitationId"));

                    b.Property<int?>("Adults")
                        .HasColumnType("int");

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Ages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Minors")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeHabitation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HabitationId");

                    b.ToTable("Habitations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.HabitationsReservation", b =>
                {
                    b.Property<int>("HabitationsReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabitationsReservationId"));

                    b.Property<int>("HabitationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ReservationHotelId")
                        .HasColumnType("int");

                    b.HasKey("HabitationsReservationId");

                    b.HasIndex("HabitationId");

                    b.HasIndex("ReservationHotelId");

                    b.ToTable("HabitationsReservations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Hotels", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Identity.GetAllReservationsView", b =>
                {
                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable("GetAllReservationsViews");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Identity.ReservationsByEmployeeView", b =>
                {
                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Identity.ReservationsToExpire", b =>
                {
                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.IndividualRate", b =>
                {
                    b.Property<int>("IndividualRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndividualRateId"));

                    b.Property<decimal?>("ClientRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ExtraDiscount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PublicRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ReservationHotelId")
                        .HasColumnType("int");

                    b.HasKey("IndividualRateId");

                    b.HasIndex("ReservationHotelId");

                    b.ToTable("IndividualRates");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Notifications", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReaded")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentConcept", b =>
                {
                    b.Property<int>("PaymentConceptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentConceptId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentConceptId");

                    b.ToTable("PaymentConcepts");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentMethods", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentProviderList", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConceptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentProviderId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("PaymentConceptId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentProviderId");

                    b.ToTable("PaymentProviderLists");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentProviders", b =>
                {
                    b.Property<int>("PaymentProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentProviderId"));

                    b.Property<decimal?>("AmountMissing")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("AmountTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentConceptId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationFlightId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationHotelId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationTourId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationVehicleId")
                        .HasColumnType("int");

                    b.HasKey("PaymentProviderId");

                    b.HasIndex("PaymentConceptId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ReservationFlightId");

                    b.HasIndex("ReservationHotelId");

                    b.HasIndex("ReservationTourId");

                    b.HasIndex("ReservationVehicleId");

                    b.ToTable("PaymentProviders");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentRelationList", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("AmountReceivedClient")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("AmountReturnedClient")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DetailsPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentReservationId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentReservationId");

                    b.ToTable("PaymentRelationLists");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentsRelationReservations", b =>
                {
                    b.Property<int>("PaymentReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentReservationId"));

                    b.Property<decimal?>("AmountMissing")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("AmountTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReservationFlightId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationHotelId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationTourId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationVehicleId")
                        .HasColumnType("int");

                    b.HasKey("PaymentReservationId");

                    b.HasIndex("ReservationFlightId");

                    b.HasIndex("ReservationHotelId");

                    b.HasIndex("ReservationTourId");

                    b.HasIndex("ReservationVehicleId");

                    b.ToTable("PaymentsRelationReservations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Providers", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            IsDeleted = false,
                            Name = "Record"
                        },
                        new
                        {
                            ProviderId = 2,
                            IsDeleted = false,
                            Name = "Check In"
                        },
                        new
                        {
                            ProviderId = 3,
                            IsDeleted = false,
                            Name = "Imacop"
                        },
                        new
                        {
                            ProviderId = 4,
                            IsDeleted = false,
                            Name = "Promoser"
                        },
                        new
                        {
                            ProviderId = 5,
                            IsDeleted = false,
                            Name = "Megatravel"
                        },
                        new
                        {
                            ProviderId = 6,
                            IsDeleted = false,
                            Name = "Europamundo"
                        },
                        new
                        {
                            ProviderId = 7,
                            IsDeleted = false,
                            Name = "Chartes"
                        },
                        new
                        {
                            ProviderId = 8,
                            IsDeleted = false,
                            Name = "Israel"
                        },
                        new
                        {
                            ProviderId = 9,
                            IsDeleted = false,
                            Name = "Copper Canyon"
                        });
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationFlight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<int?>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTravel")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReservadedByHotel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentLimitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentLimitDateProvider")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethodAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PriceNeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PricePublic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteArrivalAirportId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteDepartureAirportId")
                        .HasColumnType("int");

                    b.Property<bool>("isMultidestinationFlight")
                        .HasColumnType("bit");

                    b.Property<bool>("isRoundFlight")
                        .HasColumnType("bit");

                    b.Property<bool>("isSimpleFlight")
                        .HasColumnType("bit");

                    b.HasKey("FlightId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("RouteArrivalAirportId");

                    b.HasIndex("RouteDepartureAirportId");

                    b.ToTable("ReservationFlights");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationFlightDestinations", b =>
                {
                    b.Property<int>("ReservationFlightDestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationFlightDestinationId"));

                    b.Property<int?>("AirlineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTravel")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationFlightId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteArrivalAirportId")
                        .HasColumnType("int");

                    b.Property<int?>("RouteDepartureAirportId")
                        .HasColumnType("int");

                    b.HasKey("ReservationFlightDestinationId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("ReservationFlightId");

                    b.HasIndex("RouteArrivalAirportId");

                    b.HasIndex("RouteDepartureAirportId");

                    b.ToTable("ReservationFlightDestinations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotel", b =>
                {
                    b.Property<int>("ReservationHotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationHotelId"));

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeVoicher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("GroupCoordinator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentLimitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentLimitDateProvider")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCoordinator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("TravelDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TravelDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeHabitation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeReservationGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeReservationId")
                        .HasColumnType("int");

                    b.HasKey("ReservationHotelId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HotelId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TypeReservationGroupId");

                    b.HasIndex("TypeReservationId");

                    b.ToTable("ReservationHotels");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotelGroup", b =>
                {
                    b.Property<int>("ReservationHotelGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationHotelGroupId"));

                    b.Property<string>("ConfirmationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("NightsNumber")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RangeJunior")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RangeMinor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("RangePublicClient")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ReservationHotelId")
                        .HasColumnType("int");

                    b.HasKey("ReservationHotelGroupId");

                    b.HasIndex("ReservationHotelId");

                    b.ToTable("ReservationHotelGroups");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotelsServicesAditionals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AditionalServiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReservationFlightId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationHotelId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationVehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AditionalServiceId");

                    b.HasIndex("ReservationFlightId");

                    b.HasIndex("ReservationHotelId");

                    b.HasIndex("ReservationVehicleId");

                    b.ToTable("ReservationHotelsServicesAditionals");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationTours", b =>
                {
                    b.Property<int>("ReservationTourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationTourId"));

                    b.Property<decimal?>("AdultCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateActivity")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ExchangeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludeTransportation")
                        .HasColumnType("bit");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternational")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNational")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinorCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("NetPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("NumberAdults")
                        .HasColumnType("int");

                    b.Property<int?>("NumberMinors")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentLimitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentLimitDateProvider")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PublicRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TourName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationTourId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ReservationTours");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationVehicle", b =>
                {
                    b.Property<int>("ReservationVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationVehicleId"));

                    b.Property<string>("ArrivalLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateSale")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTravel")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReservadedByHotel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentLimitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaymentLimitDateProvider")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PriceNeto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PricePublic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("ReservationVehicleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ReservationVehicles");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Routes", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ServicesProvider", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CommissionAgency")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CommissionClient")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CommissionEmployee")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountExtra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("ProviderId");

                    b.ToTable("ServicesProviders");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            CommissionAgency = 15m,
                            CommissionClient = 10m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Hotelería",
                            ProviderId = 1
                        },
                        new
                        {
                            ServiceId = 2,
                            CommissionAgency = 15m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Traslados",
                            ProviderId = 1
                        },
                        new
                        {
                            ServiceId = 3,
                            CommissionAgency = 15m,
                            CommissionClient = 10m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Hoteleria",
                            ProviderId = 2
                        },
                        new
                        {
                            ServiceId = 4,
                            CommissionAgency = 10m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Renta de autos",
                            ProviderId = 2
                        },
                        new
                        {
                            ServiceId = 5,
                            CommissionAgency = 18m,
                            CommissionClient = 13m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Hoteleria",
                            ProviderId = 3
                        },
                        new
                        {
                            ServiceId = 6,
                            CommissionAgency = 18m,
                            CommissionClient = 10m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Circuitos",
                            ProviderId = 3
                        },
                        new
                        {
                            ServiceId = 7,
                            CommissionAgency = 5m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Entradas a disney",
                            ProviderId = 3
                        },
                        new
                        {
                            ServiceId = 8,
                            CommissionAgency = 15m,
                            CommissionClient = 8m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Parques",
                            ProviderId = 4
                        },
                        new
                        {
                            ServiceId = 9,
                            CommissionAgency = 17m,
                            CommissionClient = 12m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Hoteleria",
                            ProviderId = 4
                        },
                        new
                        {
                            ServiceId = 10,
                            CommissionAgency = 10m,
                            CommissionClient = 5m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "",
                            ProviderId = 5
                        },
                        new
                        {
                            ServiceId = 11,
                            CommissionAgency = 10m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "",
                            ProviderId = 6
                        },
                        new
                        {
                            ServiceId = 12,
                            CommissionAgency = 20m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "",
                            ProviderId = 7
                        },
                        new
                        {
                            ServiceId = 13,
                            CommissionAgency = 5m,
                            CommissionClient = 0m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "Traslados",
                            ProviderId = 8
                        },
                        new
                        {
                            ServiceId = 14,
                            CommissionAgency = 15m,
                            CommissionClient = 10m,
                            CommissionEmployee = 5m,
                            DiscountExtra = 0m,
                            IsDeleted = false,
                            Name = "",
                            ProviderId = 9
                        });
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.TypeReservation", b =>
                {
                    b.Property<int>("TypeReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeReservationId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeReservationId");

                    b.ToTable("TypeReservations");

                    b.HasData(
                        new
                        {
                            TypeReservationId = 1,
                            IsDeleted = false,
                            Name = "Individual"
                        },
                        new
                        {
                            TypeReservationId = 2,
                            IsDeleted = false,
                            Name = "Grupal"
                        });
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.TypeReservationGrupal", b =>
                {
                    b.Property<int>("TypeReservationGrupalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeReservationGrupalId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeReservationGrupalId");

                    b.ToTable("TypeReservationGrupals");

                    b.HasData(
                        new
                        {
                            TypeReservationGrupalId = 1,
                            IsDeleted = false,
                            Name = "Grupo"
                        },
                        new
                        {
                            TypeReservationGrupalId = 2,
                            IsDeleted = false,
                            Name = "Individual"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoGlobalArandas.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurismoGlobalArandas.Entities.User", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Files", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.PaymentProviders", "PaymentProviders")
                        .WithMany()
                        .HasForeignKey("PaymentProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentProviders");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.GroupRate", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotelGroup", "ReservationHotelGroup")
                        .WithMany()
                        .HasForeignKey("ReservationHotelGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReservationHotelGroup");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.HabitationsReservation", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Habitations", "Habitations")
                        .WithMany()
                        .HasForeignKey("HabitationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "reservationHotel")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitations");

                    b.Navigation("reservationHotel");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.Hotels", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Destinations", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.IndividualRate", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "reservationHotel")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId");

                    b.Navigation("reservationHotel");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentProviderList", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.PaymentConcept", "PaymentConcept")
                        .WithMany()
                        .HasForeignKey("PaymentConceptId");

                    b.HasOne("TurismoGlobalArandas.Models.PaymentMethods", "PaymentMethods")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("TurismoGlobalArandas.Models.PaymentProviders", "PaymentProviders")
                        .WithMany()
                        .HasForeignKey("PaymentProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentConcept");

                    b.Navigation("PaymentMethods");

                    b.Navigation("PaymentProviders");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentProviders", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.PaymentConcept", "PaymentConcept")
                        .WithMany()
                        .HasForeignKey("PaymentConceptId");

                    b.HasOne("TurismoGlobalArandas.Models.PaymentMethods", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationFlight", "reservationFlight")
                        .WithMany()
                        .HasForeignKey("ReservationFlightId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "ReservationHotels")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationTours", "ReservationTours")
                        .WithMany()
                        .HasForeignKey("ReservationTourId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationVehicle", "ReservationVehicles")
                        .WithMany()
                        .HasForeignKey("ReservationVehicleId");

                    b.Navigation("PaymentConcept");

                    b.Navigation("PaymentMethod");

                    b.Navigation("ReservationHotels");

                    b.Navigation("ReservationTours");

                    b.Navigation("ReservationVehicles");

                    b.Navigation("reservationFlight");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentRelationList", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TurismoGlobalArandas.Models.PaymentMethods", "PaymentMethods")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoGlobalArandas.Models.PaymentsRelationReservations", "PaymentsRelationReservations")
                        .WithMany()
                        .HasForeignKey("PaymentReservationId");

                    b.Navigation("Employees");

                    b.Navigation("PaymentMethods");

                    b.Navigation("PaymentsRelationReservations");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.PaymentsRelationReservations", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.ReservationFlight", "reservationFlight")
                        .WithMany()
                        .HasForeignKey("ReservationFlightId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "ReservationHotels")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationTours", "ReservationTours")
                        .WithMany()
                        .HasForeignKey("ReservationTourId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationVehicle", "ReservationVehicles")
                        .WithMany()
                        .HasForeignKey("ReservationVehicleId");

                    b.Navigation("ReservationHotels");

                    b.Navigation("ReservationTours");

                    b.Navigation("ReservationVehicles");

                    b.Navigation("reservationFlight");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationFlight", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId");

                    b.HasOne("TurismoGlobalArandas.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TurismoGlobalArandas.Models.Providers", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.HasOne("TurismoGlobalArandas.Models.Routes", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("RouteArrivalAirportId");

                    b.HasOne("TurismoGlobalArandas.Models.Routes", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("RouteDepartureAirportId");

                    b.Navigation("Airline");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("Customers");

                    b.Navigation("DepartureAirport");

                    b.Navigation("Employees");

                    b.Navigation("Providers");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationFlightDestinations", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationFlight", "ReservationFlight")
                        .WithMany()
                        .HasForeignKey("ReservationFlightId");

                    b.HasOne("TurismoGlobalArandas.Models.Routes", "ArrivalAirport")
                        .WithMany()
                        .HasForeignKey("RouteArrivalAirportId");

                    b.HasOne("TurismoGlobalArandas.Models.Routes", "DepartureAirport")
                        .WithMany()
                        .HasForeignKey("RouteDepartureAirportId");

                    b.Navigation("Airline");

                    b.Navigation("ArrivalAirport");

                    b.Navigation("DepartureAirport");

                    b.Navigation("ReservationFlight");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotel", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TurismoGlobalArandas.Models.Destinations", "Destinations")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TurismoGlobalArandas.Models.Hotels", "Hotels")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.HasOne("TurismoGlobalArandas.Models.Providers", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.HasOne("TurismoGlobalArandas.Models.TypeReservationGrupal", "TypeReservationGrupal")
                        .WithMany()
                        .HasForeignKey("TypeReservationGroupId");

                    b.HasOne("TurismoGlobalArandas.Models.TypeReservation", "TypeReservation")
                        .WithMany()
                        .HasForeignKey("TypeReservationId");

                    b.Navigation("Customers");

                    b.Navigation("Destinations");

                    b.Navigation("Employees");

                    b.Navigation("Hotels");

                    b.Navigation("Providers");

                    b.Navigation("TypeReservation");

                    b.Navigation("TypeReservationGrupal");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotelGroup", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "reservationHotel")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId");

                    b.Navigation("reservationHotel");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationHotelsServicesAditionals", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.AditionalServices", "AditionalServices")
                        .WithMany()
                        .HasForeignKey("AditionalServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoGlobalArandas.Models.ReservationFlight", "ReservationFlight")
                        .WithMany()
                        .HasForeignKey("ReservationFlightId");

                    b.HasOne("TurismoGlobalArandas.Models.ReservationHotel", "reservationHotel")
                        .WithMany()
                        .HasForeignKey("ReservationHotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurismoGlobalArandas.Models.ReservationVehicle", "ReservationVehicle")
                        .WithMany()
                        .HasForeignKey("ReservationVehicleId");

                    b.Navigation("AditionalServices");

                    b.Navigation("ReservationFlight");

                    b.Navigation("ReservationVehicle");

                    b.Navigation("reservationHotel");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationTours", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TurismoGlobalArandas.Models.Destinations", "Destinations")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TurismoGlobalArandas.Models.Providers", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Customers");

                    b.Navigation("Destinations");

                    b.Navigation("Employees");

                    b.Navigation("Providers");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ReservationVehicle", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TurismoGlobalArandas.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TurismoGlobalArandas.Models.Providers", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Providers");
                });

            modelBuilder.Entity("TurismoGlobalArandas.Models.ServicesProvider", b =>
                {
                    b.HasOne("TurismoGlobalArandas.Models.Providers", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Providers");
                });
#pragma warning restore 612, 618
        }
    }
}
